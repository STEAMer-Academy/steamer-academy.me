name: ‚öíÔ∏è Build And Deploy

on:
  push:
    branches:
      - main
  pull_request_target:
    types: [opened, synchronize, reopened, closed, ready_for_review]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request_target' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: ‚öôÔ∏è Build and Deploy Job

    steps:
      # Checkout the repository
      - name: üì• Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false
          # Checkout the pull request ref only when it's a pull request
          ref: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.ref || 'main' }}
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}

      # Setup Bun
      - name: ü•ê Setup Bun
        uses: oven-sh/setup-bun@v2

      # Install dependencies
      - name: üì¶ Install Dependencies
        run: bun install

      # Set environment variables by writing to `.env` file
      - name: üîß Setting Environment Variables
        run: |
          cat <<EOF > .env
          NEXT_PUBLIC_GOOGLE_ANALYTICS_ID=${{ secrets.NEXT_PUBLIC_GOOGLE_ANALYTICS_ID }}
          REDIS_URL=${{ secrets.REDIS_URL }}
          REDIS_TOKEN=${{ secrets.REDIS_TOKEN }}
          TURSO_AUTH_TOKEN=${{ secrets.TURSO_AUTH_TOKEN }}
          TURSO_DATABASE_URL=${{ secrets.TURSO_DATABASE_URL }}
          NEXT_PUBLIC_RECAPTCHA_SITE_KEY=${{ secrets.NEXT_PUBLIC_RECAPTCHA_SITE_KEY }}
          RECAPTCHA_SECRET_KEY=${{ secrets.RECAPTCHA_SECRET_KEY }}
          ARCJET_KEY=${{ secrets.ARCJET_KEY }}
          NEXT_PUBLIC_CLARITY_ID=${{ secrets.NEXT_PUBLIC_CLARITY_ID }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}
          EOF

      # Build the application
      - name: üèóÔ∏è Build
        run: bun run build

      # Deploy to Azure Static Web Apps
      - name: üöÄ Deploy to Azure Static Web Apps
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_SALMON_GROUND_0A4C5D310 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/"
          skip_app_build: true
          deployment_environment: ${{ github.event_name == 'pull_request_target' && format('pull-{0}', github.event.pull_request.number) || '' }}

  close_pull_request_job:
    if: github.event_name == 'pull_request_target' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: üõë Close Pull Request Job

    steps:
      # Close pull request deployment
      - name: üì¶ Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_SALMON_GROUND_0A4C5D310 }}
          action: "close"
